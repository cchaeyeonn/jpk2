<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "ezen.dev.spring.order">
     
	
	<select id="getOrderList"  parameterType="Integer" resultType="orderVo">	
		select row_number() over(order by order_id desc) as num, order_id , group_concat(pbidx_co) as product , pay_price , pay_way , orderpay_check , pay_findate , order_date , midx_mo, d_status  from fm_order a inner join fm_del b on a.oidx = b.oidx_od where midx_mo=#{midx} group by order_id;
	</select>
	

	
    <insert id="add_order" parameterType="orderVo">
		insert into fm_order(pay_way,orderpay_check,pay_price,pay_findate,midx_mo,pbidx_co,order_id,vbank_num,vbank_name,vbank_holder,vbank_date) 
		 values(#{pay_way}, #{p_check}, #{p_price},#{pay_findate},#{midx_mo},#{pbidx_co},#{order_id},#{vbank_num},#{vbank_name},#{vbank_holder},#{vbank_date})
	</insert>
    
   
	<select id="getoidx" resultType="int">
		select oidx from fm_order where pbidx_co=#{pbidx_co}
	</select>   
   
   <select id="getOrderDetail" resultType="orderVo">
		select order_id , group_concat(pbidx_co) as product , pay_price , pay_way , orderpay_check , pay_findate , order_date , midx_mo, oidx  from fm_order where order_id=#{order_id} group by order_id;
   </select>
   
   
</mapper>